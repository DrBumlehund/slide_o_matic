/**
 * generated by Xtext 2.13.0
 */
package dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.impl;

import dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.List;
import dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.ListItem;
import dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.SlideOMaticPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>List Item</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.impl.ListItemImpl#getItem <em>Item</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.impl.ListItemImpl#getNestedList <em>Nested List</em>}</li>
 *   <li>{@link dk.sdu.mmmi.mdsd.f18.dsl.external.slideOMatic.impl.ListItemImpl#getClick <em>Click</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ListItemImpl extends MinimalEObjectImpl.Container implements ListItem
{
  /**
   * The default value of the '{@link #getItem() <em>Item</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItem()
   * @generated
   * @ordered
   */
  protected static final String ITEM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItem() <em>Item</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItem()
   * @generated
   * @ordered
   */
  protected String item = ITEM_EDEFAULT;

  /**
   * The cached value of the '{@link #getNestedList() <em>Nested List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNestedList()
   * @generated
   * @ordered
   */
  protected List nestedList;

  /**
   * The default value of the '{@link #getClick() <em>Click</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClick()
   * @generated
   * @ordered
   */
  protected static final String CLICK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getClick() <em>Click</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClick()
   * @generated
   * @ordered
   */
  protected String click = CLICK_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ListItemImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SlideOMaticPackage.Literals.LIST_ITEM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getItem()
  {
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setItem(String newItem)
  {
    String oldItem = item;
    item = newItem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SlideOMaticPackage.LIST_ITEM__ITEM, oldItem, item));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public List getNestedList()
  {
    return nestedList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNestedList(List newNestedList, NotificationChain msgs)
  {
    List oldNestedList = nestedList;
    nestedList = newNestedList;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SlideOMaticPackage.LIST_ITEM__NESTED_LIST, oldNestedList, newNestedList);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNestedList(List newNestedList)
  {
    if (newNestedList != nestedList)
    {
      NotificationChain msgs = null;
      if (nestedList != null)
        msgs = ((InternalEObject)nestedList).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SlideOMaticPackage.LIST_ITEM__NESTED_LIST, null, msgs);
      if (newNestedList != null)
        msgs = ((InternalEObject)newNestedList).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SlideOMaticPackage.LIST_ITEM__NESTED_LIST, null, msgs);
      msgs = basicSetNestedList(newNestedList, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SlideOMaticPackage.LIST_ITEM__NESTED_LIST, newNestedList, newNestedList));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getClick()
  {
    return click;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setClick(String newClick)
  {
    String oldClick = click;
    click = newClick;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SlideOMaticPackage.LIST_ITEM__CLICK, oldClick, click));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SlideOMaticPackage.LIST_ITEM__NESTED_LIST:
        return basicSetNestedList(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SlideOMaticPackage.LIST_ITEM__ITEM:
        return getItem();
      case SlideOMaticPackage.LIST_ITEM__NESTED_LIST:
        return getNestedList();
      case SlideOMaticPackage.LIST_ITEM__CLICK:
        return getClick();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SlideOMaticPackage.LIST_ITEM__ITEM:
        setItem((String)newValue);
        return;
      case SlideOMaticPackage.LIST_ITEM__NESTED_LIST:
        setNestedList((List)newValue);
        return;
      case SlideOMaticPackage.LIST_ITEM__CLICK:
        setClick((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SlideOMaticPackage.LIST_ITEM__ITEM:
        setItem(ITEM_EDEFAULT);
        return;
      case SlideOMaticPackage.LIST_ITEM__NESTED_LIST:
        setNestedList((List)null);
        return;
      case SlideOMaticPackage.LIST_ITEM__CLICK:
        setClick(CLICK_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SlideOMaticPackage.LIST_ITEM__ITEM:
        return ITEM_EDEFAULT == null ? item != null : !ITEM_EDEFAULT.equals(item);
      case SlideOMaticPackage.LIST_ITEM__NESTED_LIST:
        return nestedList != null;
      case SlideOMaticPackage.LIST_ITEM__CLICK:
        return CLICK_EDEFAULT == null ? click != null : !CLICK_EDEFAULT.equals(click);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (item: ");
    result.append(item);
    result.append(", click: ");
    result.append(click);
    result.append(')');
    return result.toString();
  }

} //ListItemImpl
