/*
 * generated by Xtext 2.12.0
 */
grammar InternalSlideOMatic;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package dk.sdu.mmmi.mdsd.f18.dsl.external.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.sdu.mmmi.mdsd.f18.dsl.external.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import dk.sdu.mmmi.mdsd.f18.dsl.external.services.SlideOMaticGrammarAccess;

}
@parser::members {
	private SlideOMaticGrammarAccess grammarAccess;

	public void setGrammarAccess(SlideOMaticGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getPresentationAssignment()); }
		(rule__Model__PresentationAssignment)
		{ after(grammarAccess.getModelAccess().getPresentationAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePresentation
entryRulePresentation
:
{ before(grammarAccess.getPresentationRule()); }
	 rulePresentation
{ after(grammarAccess.getPresentationRule()); } 
	 EOF 
;

// Rule Presentation
rulePresentation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPresentationAccess().getGroup()); }
		(rule__Presentation__Group__0)
		{ after(grammarAccess.getPresentationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSetting
entryRuleSetting
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSettingAccess().getAlternatives()); }
		(rule__Setting__Alternatives)
		{ after(grammarAccess.getSettingAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheme
entryRuleTheme
:
{ before(grammarAccess.getThemeRule()); }
	 ruleTheme
{ after(grammarAccess.getThemeRule()); } 
	 EOF 
;

// Rule Theme
ruleTheme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThemeAccess().getGroup()); }
		(rule__Theme__Group__0)
		{ after(grammarAccess.getThemeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBeamerTheme
entryRuleBeamerTheme
:
{ before(grammarAccess.getBeamerThemeRule()); }
	 ruleBeamerTheme
{ after(grammarAccess.getBeamerThemeRule()); } 
	 EOF 
;

// Rule BeamerTheme
ruleBeamerTheme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBeamerThemeAccess().getAlternatives()); }
		(rule__BeamerTheme__Alternatives)
		{ after(grammarAccess.getBeamerThemeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThemeColor
entryRuleThemeColor
:
{ before(grammarAccess.getThemeColorRule()); }
	 ruleThemeColor
{ after(grammarAccess.getThemeColorRule()); } 
	 EOF 
;

// Rule ThemeColor
ruleThemeColor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThemeColorAccess().getAlternatives()); }
		(rule__ThemeColor__Alternatives)
		{ after(grammarAccess.getThemeColorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAuthor
entryRuleAuthor
:
{ before(grammarAccess.getAuthorRule()); }
	 ruleAuthor
{ after(grammarAccess.getAuthorRule()); } 
	 EOF 
;

// Rule Author
ruleAuthor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAuthorAccess().getGroup()); }
		(rule__Author__Group__0)
		{ after(grammarAccess.getAuthorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDate
entryRuleDate
:
{ before(grammarAccess.getDateRule()); }
	 ruleDate
{ after(grammarAccess.getDateRule()); } 
	 EOF 
;

// Rule Date
ruleDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateAccess().getGroup()); }
		(rule__Date__Group__0)
		{ after(grammarAccess.getDateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSlide
entryRuleSlide
:
{ before(grammarAccess.getSlideRule()); }
	 ruleSlide
{ after(grammarAccess.getSlideRule()); } 
	 EOF 
;

// Rule Slide
ruleSlide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSlideAccess().getGroup()); }
		(rule__Slide__Group__0)
		{ after(grammarAccess.getSlideAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getAlternatives()); }
		(rule__Section__Alternatives)
		{ after(grammarAccess.getSectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContent
entryRuleContent
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContentAccess().getAlternatives()); }
		(rule__Content__Alternatives)
		{ after(grammarAccess.getContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getAlternatives()); }
		(rule__Text__Alternatives)
		{ after(grammarAccess.getTextAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleList
entryRuleList
:
{ before(grammarAccess.getListRule()); }
	 ruleList
{ after(grammarAccess.getListRule()); } 
	 EOF 
;

// Rule List
ruleList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListAccess().getAlternatives()); }
		(rule__List__Alternatives)
		{ after(grammarAccess.getListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumberedListItem
entryRuleNumberedListItem
:
{ before(grammarAccess.getNumberedListItemRule()); }
	 ruleNumberedListItem
{ after(grammarAccess.getNumberedListItemRule()); } 
	 EOF 
;

// Rule NumberedListItem
ruleNumberedListItem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberedListItemAccess().getGroup()); }
		(rule__NumberedListItem__Group__0)
		{ after(grammarAccess.getNumberedListItemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnNumberedList
entryRuleUnNumberedList
:
{ before(grammarAccess.getUnNumberedListRule()); }
	 ruleUnNumberedList
{ after(grammarAccess.getUnNumberedListRule()); } 
	 EOF 
;

// Rule UnNumberedList
ruleUnNumberedList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnNumberedListAccess().getGroup()); }
		(rule__UnNumberedList__Group__0)
		{ after(grammarAccess.getUnNumberedListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getAlternatives()); }
		(rule__Float__Alternatives)
		{ after(grammarAccess.getFloatAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImage
entryRuleImage
:
{ before(grammarAccess.getImageRule()); }
	 ruleImage
{ after(grammarAccess.getImageRule()); } 
	 EOF 
;

// Rule Image
ruleImage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImageAccess().getGroup()); }
		(rule__Image__Group__0)
		{ after(grammarAccess.getImageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlignment
entryRuleAlignment
:
{ before(grammarAccess.getAlignmentRule()); }
	 ruleAlignment
{ after(grammarAccess.getAlignmentRule()); } 
	 EOF 
;

// Rule Alignment
ruleAlignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlignmentAccess().getAlternatives()); }
		(rule__Alignment__Alternatives)
		{ after(grammarAccess.getAlignmentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSize
entryRuleSize
:
{ before(grammarAccess.getSizeRule()); }
	 ruleSize
{ after(grammarAccess.getSizeRule()); } 
	 EOF 
;

// Rule Size
ruleSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSizeAccess().getGroup()); }
		(rule__Size__Group__0)
		{ after(grammarAccess.getSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTableRow
entryRuleTableRow
:
{ before(grammarAccess.getTableRowRule()); }
	 ruleTableRow
{ after(grammarAccess.getTableRowRule()); } 
	 EOF 
;

// Rule TableRow
ruleTableRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableRowAccess().getGroup()); }
		(rule__TableRow__Group__0)
		{ after(grammarAccess.getTableRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getDollarSignDollarSignKeyword()); }
		'$$'
		{ after(grammarAccess.getClickAccess().getDollarSignDollarSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimation
entryRuleAnimation
:
{ before(grammarAccess.getAnimationRule()); }
	 ruleAnimation
{ after(grammarAccess.getAnimationRule()); } 
	 EOF 
;

// Rule Animation
ruleAnimation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimationAccess().getGroup()); }
		(rule__Animation__Group__0)
		{ after(grammarAccess.getAnimationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnimationType
entryRuleAnimationType
:
{ before(grammarAccess.getAnimationTypeRule()); }
	 ruleAnimationType
{ after(grammarAccess.getAnimationTypeRule()); } 
	 EOF 
;

// Rule AnimationType
ruleAnimationType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnimationTypeAccess().getAlternatives()); }
		(rule__AnimationType__Alternatives)
		{ after(grammarAccess.getAnimationTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresentationAccess().getSlidesAssignment_4_0()); }
		(rule__Presentation__SlidesAssignment_4_0)
		{ after(grammarAccess.getPresentationAccess().getSlidesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getPresentationAccess().getAnimationsAssignment_4_1()); }
		(rule__Presentation__AnimationsAssignment_4_1)
		{ after(grammarAccess.getPresentationAccess().getAnimationsAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSettingAccess().getThemeParserRuleCall_0()); }
		ruleTheme
		{ after(grammarAccess.getSettingAccess().getThemeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSettingAccess().getAuthorParserRuleCall_1()); }
		ruleAuthor
		{ after(grammarAccess.getSettingAccess().getAuthorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSettingAccess().getDateParserRuleCall_2()); }
		ruleDate
		{ after(grammarAccess.getSettingAccess().getDateParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BeamerTheme__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBeamerThemeAccess().getAnnArborKeyword_0()); }
		'AnnArbor'
		{ after(grammarAccess.getBeamerThemeAccess().getAnnArborKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getAntibesKeyword_1()); }
		'Antibes'
		{ after(grammarAccess.getBeamerThemeAccess().getAntibesKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getBergenKeyword_2()); }
		'Bergen'
		{ after(grammarAccess.getBeamerThemeAccess().getBergenKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getBerkeleyKeyword_3()); }
		'Berkeley'
		{ after(grammarAccess.getBeamerThemeAccess().getBerkeleyKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getBerlinKeyword_4()); }
		'Berlin'
		{ after(grammarAccess.getBeamerThemeAccess().getBerlinKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getBoadillaKeyword_5()); }
		'Boadilla'
		{ after(grammarAccess.getBeamerThemeAccess().getBoadillaKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getBoxesKeyword_6()); }
		'boxes'
		{ after(grammarAccess.getBeamerThemeAccess().getBoxesKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getCambridgeUSKeyword_7()); }
		'CambridgeUS'
		{ after(grammarAccess.getBeamerThemeAccess().getCambridgeUSKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getCopenhagenKeyword_8()); }
		'Copenhagen'
		{ after(grammarAccess.getBeamerThemeAccess().getCopenhagenKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getDarmstadtKeyword_9()); }
		'Darmstadt'
		{ after(grammarAccess.getBeamerThemeAccess().getDarmstadtKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getDefaultKeyword_10()); }
		'default'
		{ after(grammarAccess.getBeamerThemeAccess().getDefaultKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getDresdenKeyword_11()); }
		'Dresden'
		{ after(grammarAccess.getBeamerThemeAccess().getDresdenKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getFrankfurtKeyword_12()); }
		'Frankfurt'
		{ after(grammarAccess.getBeamerThemeAccess().getFrankfurtKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getGoettingenKeyword_13()); }
		'Goettingen'
		{ after(grammarAccess.getBeamerThemeAccess().getGoettingenKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getHannoverKeyword_14()); }
		'Hannover'
		{ after(grammarAccess.getBeamerThemeAccess().getHannoverKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getIlmanauKeyword_15()); }
		'Ilmanau'
		{ after(grammarAccess.getBeamerThemeAccess().getIlmanauKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getJuanLesPinsKeyword_16()); }
		'JuanLesPins'
		{ after(grammarAccess.getBeamerThemeAccess().getJuanLesPinsKeyword_16()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getLuebeckKeyword_17()); }
		'Luebeck'
		{ after(grammarAccess.getBeamerThemeAccess().getLuebeckKeyword_17()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getMadridKeyword_18()); }
		'Madrid'
		{ after(grammarAccess.getBeamerThemeAccess().getMadridKeyword_18()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getMalmoeKeyword_19()); }
		'Malmoe'
		{ after(grammarAccess.getBeamerThemeAccess().getMalmoeKeyword_19()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getMarburgKeyword_20()); }
		'Marburg'
		{ after(grammarAccess.getBeamerThemeAccess().getMarburgKeyword_20()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getMontpellierKeyword_21()); }
		'Montpellier'
		{ after(grammarAccess.getBeamerThemeAccess().getMontpellierKeyword_21()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getPaloAltoKeyword_22()); }
		'PaloAlto'
		{ after(grammarAccess.getBeamerThemeAccess().getPaloAltoKeyword_22()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getPittsburghKeyword_23()); }
		'Pittsburgh'
		{ after(grammarAccess.getBeamerThemeAccess().getPittsburghKeyword_23()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getRochesterKeyword_24()); }
		'Rochester'
		{ after(grammarAccess.getBeamerThemeAccess().getRochesterKeyword_24()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getSingaporeKeyword_25()); }
		'Singapore'
		{ after(grammarAccess.getBeamerThemeAccess().getSingaporeKeyword_25()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getSzegedKeyword_26()); }
		'Szeged'
		{ after(grammarAccess.getBeamerThemeAccess().getSzegedKeyword_26()); }
	)
	|
	(
		{ before(grammarAccess.getBeamerThemeAccess().getWarsawKeyword_27()); }
		'Warsaw'
		{ after(grammarAccess.getBeamerThemeAccess().getWarsawKeyword_27()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThemeColor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThemeColorAccess().getAlbatrosKeyword_0()); }
		'albatros'
		{ after(grammarAccess.getThemeColorAccess().getAlbatrosKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getBeaverKeyword_1()); }
		'beaver'
		{ after(grammarAccess.getThemeColorAccess().getBeaverKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getBeetleKeyword_2()); }
		'beetle'
		{ after(grammarAccess.getThemeColorAccess().getBeetleKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getCraneKeyword_3()); }
		'crane'
		{ after(grammarAccess.getThemeColorAccess().getCraneKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getDefaultKeyword_4()); }
		'default'
		{ after(grammarAccess.getThemeColorAccess().getDefaultKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getDolphinKeyword_5()); }
		'dolphin'
		{ after(grammarAccess.getThemeColorAccess().getDolphinKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getDoveKeyword_6()); }
		'dove'
		{ after(grammarAccess.getThemeColorAccess().getDoveKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getFlyKeyword_7()); }
		'fly'
		{ after(grammarAccess.getThemeColorAccess().getFlyKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getLilyKeyword_8()); }
		'lily'
		{ after(grammarAccess.getThemeColorAccess().getLilyKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getOrchidKeyword_9()); }
		'orchid'
		{ after(grammarAccess.getThemeColorAccess().getOrchidKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getRoseKeyword_10()); }
		'rose'
		{ after(grammarAccess.getThemeColorAccess().getRoseKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getSeagullKeyword_11()); }
		'seagull'
		{ after(grammarAccess.getThemeColorAccess().getSeagullKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getSeahorseKeyword_12()); }
		'seahorse'
		{ after(grammarAccess.getThemeColorAccess().getSeahorseKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getSidebartabKeyword_13()); }
		'sidebartab'
		{ after(grammarAccess.getThemeColorAccess().getSidebartabKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getStructureKeyword_14()); }
		'structure'
		{ after(grammarAccess.getThemeColorAccess().getStructureKeyword_14()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getWhaleKeyword_15()); }
		'whale'
		{ after(grammarAccess.getThemeColorAccess().getWhaleKeyword_15()); }
	)
	|
	(
		{ before(grammarAccess.getThemeColorAccess().getWolverineKeyword_16()); }
		'wolverine'
		{ after(grammarAccess.getThemeColorAccess().getWolverineKeyword_16()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getGroup_0()); }
		(rule__Section__Group_0__0)
		{ after(grammarAccess.getSectionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSectionAccess().getGroup_1()); }
		(rule__Section__Group_1__0)
		{ after(grammarAccess.getSectionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getSectionAccess().getGroup_2()); }
		(rule__Section__Group_2__0)
		{ after(grammarAccess.getSectionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getGroup_0()); }
		(rule__Content__Group_0__0)
		{ after(grammarAccess.getContentAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getTextParserRuleCall_1()); }
		ruleText
		{ after(grammarAccess.getContentAccess().getTextParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getListParserRuleCall_2()); }
		ruleList
		{ after(grammarAccess.getContentAccess().getListParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getFloatParserRuleCall_3()); }
		ruleFloat
		{ after(grammarAccess.getContentAccess().getFloatParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getGroup_0()); }
		(rule__Text__Group_0__0)
		{ after(grammarAccess.getTextAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getTextAccess().getGroup_1()); }
		(rule__Text__Group_1__0)
		{ after(grammarAccess.getTextAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getListAccess().getListItemsAssignment_0()); }
			(rule__List__ListItemsAssignment_0)
			{ after(grammarAccess.getListAccess().getListItemsAssignment_0()); }
		)
		(
			{ before(grammarAccess.getListAccess().getListItemsAssignment_0()); }
			(rule__List__ListItemsAssignment_0)*
			{ after(grammarAccess.getListAccess().getListItemsAssignment_0()); }
		)
	)
	|
	(
		(
			{ before(grammarAccess.getListAccess().getListItemsAssignment_1()); }
			(rule__List__ListItemsAssignment_1)
			{ after(grammarAccess.getListAccess().getListItemsAssignment_1()); }
		)
		(
			{ before(grammarAccess.getListAccess().getListItemsAssignment_1()); }
			(rule__List__ListItemsAssignment_1)*
			{ after(grammarAccess.getListAccess().getListItemsAssignment_1()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getImageParserRuleCall_0()); }
		ruleImage
		{ after(grammarAccess.getFloatAccess().getImageParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatAccess().getTableParserRuleCall_1()); }
		ruleTable
		{ after(grammarAccess.getFloatAccess().getTableParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Alignment__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlignmentAccess().getTopleftKeyword_0()); }
		'topleft'
		{ after(grammarAccess.getAlignmentAccess().getTopleftKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getTopKeyword_1()); }
		'top'
		{ after(grammarAccess.getAlignmentAccess().getTopKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getToprightKeyword_2()); }
		'topright'
		{ after(grammarAccess.getAlignmentAccess().getToprightKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getLeftKeyword_3()); }
		'left'
		{ after(grammarAccess.getAlignmentAccess().getLeftKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getCenterKeyword_4()); }
		'center'
		{ after(grammarAccess.getAlignmentAccess().getCenterKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getRightKeyword_5()); }
		'right'
		{ after(grammarAccess.getAlignmentAccess().getRightKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getBottomleftKeyword_6()); }
		'bottomleft'
		{ after(grammarAccess.getAlignmentAccess().getBottomleftKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getBottomKeyword_7()); }
		'bottom'
		{ after(grammarAccess.getAlignmentAccess().getBottomKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getAlignmentAccess().getBottomrightKeyword_8()); }
		'bottomright'
		{ after(grammarAccess.getAlignmentAccess().getBottomrightKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizeAccess().getWidthKeyword_0_0()); }
		'width'
		{ after(grammarAccess.getSizeAccess().getWidthKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSizeAccess().getHeightKeyword_0_1()); }
		'height'
		{ after(grammarAccess.getSizeAccess().getHeightKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimationTypeAccess().getGroup_0()); }
		(rule__AnimationType__Group_0__0)
		{ after(grammarAccess.getAnimationTypeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAnimationTypeAccess().getGroup_1()); }
		(rule__AnimationType__Group_1__0)
		{ after(grammarAccess.getAnimationTypeAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__0__Impl
	rule__Presentation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getPresentationKeyword_0()); }
	'presentation'
	{ after(grammarAccess.getPresentationAccess().getPresentationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__1__Impl
	rule__Presentation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getNameAssignment_1()); }
	(rule__Presentation__NameAssignment_1)
	{ after(grammarAccess.getPresentationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__2__Impl
	rule__Presentation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPresentationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__3__Impl
	rule__Presentation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getPresentationAccess().getGroup_3()); }
		(rule__Presentation__Group_3__0)
		{ after(grammarAccess.getPresentationAccess().getGroup_3()); }
	)
	(
		{ before(grammarAccess.getPresentationAccess().getGroup_3()); }
		(rule__Presentation__Group_3__0)*
		{ after(grammarAccess.getPresentationAccess().getGroup_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__4__Impl
	rule__Presentation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getAlternatives_4()); }
	(rule__Presentation__Alternatives_4)*
	{ after(grammarAccess.getPresentationAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPresentationAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Presentation__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group_3__0__Impl
	rule__Presentation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getLeftParenthesisKeyword_3_0()); }
	'('
	{ after(grammarAccess.getPresentationAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group_3__1__Impl
	rule__Presentation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getSettingsAssignment_3_1()); }
	(rule__Presentation__SettingsAssignment_3_1)*
	{ after(grammarAccess.getPresentationAccess().getSettingsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Presentation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPresentationAccess().getRightParenthesisKeyword_3_2()); }
	')'
	{ after(grammarAccess.getPresentationAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theme__Group__0__Impl
	rule__Theme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThemeAccess().getThemeKeyword_0()); }
	'theme'
	{ after(grammarAccess.getThemeAccess().getThemeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theme__Group__1__Impl
	rule__Theme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThemeAccess().getThemeAssignment_1()); }
	(rule__Theme__ThemeAssignment_1)
	{ after(grammarAccess.getThemeAccess().getThemeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theme__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThemeAccess().getGroup_2()); }
	(rule__Theme__Group_2__0)?
	{ after(grammarAccess.getThemeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Theme__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theme__Group_2__0__Impl
	rule__Theme__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThemeAccess().getColorKeyword_2_0()); }
	'color'
	{ after(grammarAccess.getThemeAccess().getColorKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Theme__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThemeAccess().getThemeColorAssignment_2_1()); }
	(rule__Theme__ThemeColorAssignment_2_1)
	{ after(grammarAccess.getThemeAccess().getThemeColorAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Author__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Author__Group__0__Impl
	rule__Author__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Author__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAuthorAccess().getAuthorKeyword_0()); }
	'author'
	{ after(grammarAccess.getAuthorAccess().getAuthorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Author__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Author__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Author__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAuthorAccess().getANameAssignment_1()); }
	(rule__Author__ANameAssignment_1)
	{ after(grammarAccess.getAuthorAccess().getANameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Date__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__0__Impl
	rule__Date__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getDateKeyword_0()); }
	'date'
	{ after(grammarAccess.getDateAccess().getDateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Date__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateAccess().getDateAssignment_1()); }
	(rule__Date__DateAssignment_1)
	{ after(grammarAccess.getDateAccess().getDateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Slide__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__0__Impl
	rule__Slide__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlideAccess().getSlideKeyword_0()); }
	'slide'
	{ after(grammarAccess.getSlideAccess().getSlideKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__1__Impl
	rule__Slide__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlideAccess().getSectionParserRuleCall_1()); }
	(ruleSection)?
	{ after(grammarAccess.getSlideAccess().getSectionParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__2__Impl
	rule__Slide__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlideAccess().getSNameAssignment_2()); }
	(rule__Slide__SNameAssignment_2)?
	{ after(grammarAccess.getSlideAccess().getSNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__3__Impl
	rule__Slide__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlideAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getSlideAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__4__Impl
	rule__Slide__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSlideAccess().getContentsAssignment_4()); }
		(rule__Slide__ContentsAssignment_4)
		{ after(grammarAccess.getSlideAccess().getContentsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getSlideAccess().getContentsAssignment_4()); }
		(rule__Slide__ContentsAssignment_4)*
		{ after(grammarAccess.getSlideAccess().getContentsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Slide__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSlideAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getSlideAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_0__0__Impl
	rule__Section__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionAction_0_0()); }
	()
	{ after(grammarAccess.getSectionAccess().getSectionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getAsteriskKeyword_0_1()); }
	'*'
	{ after(grammarAccess.getSectionAccess().getAsteriskKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_1__0__Impl
	rule__Section__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSubSectionAction_1_0()); }
	()
	{ after(grammarAccess.getSectionAccess().getSubSectionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getAsteriskAsteriskKeyword_1_1()); }
	'**'
	{ after(grammarAccess.getSectionAccess().getAsteriskAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_2__0__Impl
	rule__Section__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSubSubSectionAction_2_0()); }
	()
	{ after(grammarAccess.getSectionAccess().getSubSubSectionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getAsteriskAsteriskAsteriskKeyword_2_1()); }
	'***'
	{ after(grammarAccess.getSectionAccess().getAsteriskAsteriskAsteriskKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Content__Group_0__0__Impl
	rule__Content__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContentAccess().getTOCAction_0_0()); }
	()
	{ after(grammarAccess.getContentAccess().getTOCAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Content__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContentAccess().getToCKeyword_0_1()); }
	'ToC'
	{ after(grammarAccess.getContentAccess().getToCKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_0__0__Impl
	rule__Text__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getParagraphAction_0_0()); }
	()
	{ after(grammarAccess.getTextAccess().getParagraphAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_0__1__Impl
	rule__Text__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getGreaterThanSignKeyword_0_1()); }
	'>'
	{ after(grammarAccess.getTextAccess().getGreaterThanSignKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_0__2__Impl
	rule__Text__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_0_2()); }
	(rule__Text__TextAssignment_0_2)
	{ after(grammarAccess.getTextAccess().getTextAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getClickParserRuleCall_0_3()); }
	(ruleClick)?
	{ after(grammarAccess.getTextAccess().getClickParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__0__Impl
	rule__Text__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getBlockAction_1_0()); }
	()
	{ after(grammarAccess.getTextAccess().getBlockAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__1__Impl
	rule__Text__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getBlockKeyword_1_1()); }
	'Block'
	{ after(grammarAccess.getTextAccess().getBlockKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__2__Impl
	rule__Text__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getNameAssignment_1_2()); }
	(rule__Text__NameAssignment_1_2)?
	{ after(grammarAccess.getTextAccess().getNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__3__Impl
	rule__Text__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getLeftCurlyBracketKeyword_1_3()); }
	'{'
	{ after(grammarAccess.getTextAccess().getLeftCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__4__Impl
	rule__Text__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_1_4()); }
	(rule__Text__TextAssignment_1_4)
	{ after(grammarAccess.getTextAccess().getTextAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__5__Impl
	rule__Text__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getRightCurlyBracketKeyword_1_5()); }
	'}'
	{ after(grammarAccess.getTextAccess().getRightCurlyBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getClickParserRuleCall_1_6()); }
	(ruleClick)?
	{ after(grammarAccess.getTextAccess().getClickParserRuleCall_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumberedListItem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedListItem__Group__0__Impl
	rule__NumberedListItem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedListItemAccess().getNumberSignNumberSignKeyword_0()); }
	'##'
	{ after(grammarAccess.getNumberedListItemAccess().getNumberSignNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedListItem__Group__1__Impl
	rule__NumberedListItem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedListItemAccess().getItemAssignment_1()); }
	(rule__NumberedListItem__ItemAssignment_1)
	{ after(grammarAccess.getNumberedListItemAccess().getItemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumberedListItem__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberedListItemAccess().getClickParserRuleCall_2()); }
	(ruleClick)?
	{ after(grammarAccess.getNumberedListItemAccess().getClickParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnNumberedList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnNumberedList__Group__0__Impl
	rule__UnNumberedList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnNumberedListAccess().getHyphenMinusHyphenMinusKeyword_0()); }
	'--'
	{ after(grammarAccess.getUnNumberedListAccess().getHyphenMinusHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnNumberedList__Group__1__Impl
	rule__UnNumberedList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnNumberedListAccess().getItemAssignment_1()); }
	(rule__UnNumberedList__ItemAssignment_1)
	{ after(grammarAccess.getUnNumberedListAccess().getItemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnNumberedList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnNumberedListAccess().getClickParserRuleCall_2()); }
	(ruleClick)?
	{ after(grammarAccess.getUnNumberedListAccess().getClickParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Image__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__0__Impl
	rule__Image__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getImgKeyword_0()); }
	'img'
	{ after(grammarAccess.getImageAccess().getImgKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__1__Impl
	rule__Image__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getNameAssignment_1()); }
	(rule__Image__NameAssignment_1)
	{ after(grammarAccess.getImageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__2__Impl
	rule__Image__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getSrcKeyword_2()); }
	'src'
	{ after(grammarAccess.getImageAccess().getSrcKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__3__Impl
	rule__Image__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getSrcAssignment_3()); }
	(rule__Image__SrcAssignment_3)
	{ after(grammarAccess.getImageAccess().getSrcAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__4__Impl
	rule__Image__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getAlignmentAssignment_4()); }
	(rule__Image__AlignmentAssignment_4)?
	{ after(grammarAccess.getImageAccess().getAlignmentAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__5__Impl
	rule__Image__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getSizeAssignment_5()); }
	(rule__Image__SizeAssignment_5)
	{ after(grammarAccess.getImageAccess().getSizeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Image__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImageAccess().getClickParserRuleCall_6()); }
	(ruleClick)?
	{ after(grammarAccess.getImageAccess().getClickParserRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__0__Impl
	rule__Size__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getAlternatives_0()); }
	(rule__Size__Alternatives_0)
	{ after(grammarAccess.getSizeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__1__Impl
	rule__Size__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getScaleAssignment_1()); }
	(rule__Size__ScaleAssignment_1)
	{ after(grammarAccess.getSizeAccess().getScaleAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getPercentSignKeyword_2()); }
	'%'
	{ after(grammarAccess.getSizeAccess().getPercentSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTabKeyword_0()); }
	'tab'
	{ after(grammarAccess.getTableAccess().getTabKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
	(rule__Table__NameAssignment_1)
	{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getTableAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRowsAssignment_3()); }
	(rule__Table__RowsAssignment_3)
	{ after(grammarAccess.getTableAccess().getRowsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_4()); }
	(rule__Table__Group_4__0)*
	{ after(grammarAccess.getTableAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getTableAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__0__Impl
	rule__Table__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRowsAssignment_4_1()); }
	(rule__Table__RowsAssignment_4_1)
	{ after(grammarAccess.getTableAccess().getRowsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableRow__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__0__Impl
	rule__TableRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getTableRowAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__1__Impl
	rule__TableRow__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getValuesAssignment_1()); }
	(rule__TableRow__ValuesAssignment_1)
	{ after(grammarAccess.getTableRowAccess().getValuesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__2__Impl
	rule__TableRow__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getGroup_2()); }
	(rule__TableRow__Group_2__0)*
	{ after(grammarAccess.getTableRowAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getTableRowAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TableRow__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group_2__0__Impl
	rule__TableRow__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTableRowAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TableRow__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableRowAccess().getValuesAssignment_2_1()); }
	(rule__TableRow__ValuesAssignment_2_1)
	{ after(grammarAccess.getTableRowAccess().getValuesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Animation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__0__Impl
	rule__Animation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getAnimateKeyword_0()); }
	'animate'
	{ after(grammarAccess.getAnimationAccess().getAnimateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__1__Impl
	rule__Animation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getTargetAssignment_1()); }
	(rule__Animation__TargetAssignment_1)
	{ after(grammarAccess.getAnimationAccess().getTargetAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__2__Impl
	rule__Animation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getTypeAssignment_2()); }
	(rule__Animation__TypeAssignment_2)
	{ after(grammarAccess.getAnimationAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__3__Impl
	rule__Animation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getAnimationAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__4__Impl
	rule__Animation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getLocationAssignment_4()); }
	(rule__Animation__LocationAssignment_4)
	{ after(grammarAccess.getAnimationAccess().getLocationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Animation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationAccess().getSizeAssignment_5()); }
	(rule__Animation__SizeAssignment_5)?
	{ after(grammarAccess.getAnimationAccess().getSizeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimationType__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimationType__Group_0__0__Impl
	rule__AnimationType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationTypeAccess().getMoveAction_0_0()); }
	()
	{ after(grammarAccess.getAnimationTypeAccess().getMoveAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimationType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationTypeAccess().getMoveKeyword_0_1()); }
	'move'
	{ after(grammarAccess.getAnimationTypeAccess().getMoveKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnimationType__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimationType__Group_1__0__Impl
	rule__AnimationType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationTypeAccess().getJumpAction_1_0()); }
	()
	{ after(grammarAccess.getAnimationTypeAccess().getJumpAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnimationType__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnimationType__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnimationTypeAccess().getJumpKeyword_1_1()); }
	'jump'
	{ after(grammarAccess.getAnimationTypeAccess().getJumpKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__PresentationAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPresentationPresentationParserRuleCall_0()); }
		rulePresentation
		{ after(grammarAccess.getModelAccess().getPresentationPresentationParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresentationAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPresentationAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__SettingsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresentationAccess().getSettingsSettingParserRuleCall_3_1_0()); }
		ruleSetting
		{ after(grammarAccess.getPresentationAccess().getSettingsSettingParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__SlidesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresentationAccess().getSlidesSlideParserRuleCall_4_0_0()); }
		ruleSlide
		{ after(grammarAccess.getPresentationAccess().getSlidesSlideParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Presentation__AnimationsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPresentationAccess().getAnimationsAnimationParserRuleCall_4_1_0()); }
		ruleAnimation
		{ after(grammarAccess.getPresentationAccess().getAnimationsAnimationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__ThemeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThemeAccess().getThemeBeamerThemeParserRuleCall_1_0()); }
		ruleBeamerTheme
		{ after(grammarAccess.getThemeAccess().getThemeBeamerThemeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Theme__ThemeColorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThemeAccess().getThemeColorThemeColorParserRuleCall_2_1_0()); }
		ruleThemeColor
		{ after(grammarAccess.getThemeAccess().getThemeColorThemeColorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Author__ANameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAuthorAccess().getANameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAuthorAccess().getANameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Date__DateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateAccess().getDateSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDateAccess().getDateSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__SNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlideAccess().getSNameSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSlideAccess().getSNameSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Slide__ContentsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSlideAccess().getContentsContentParserRuleCall_4_0()); }
		ruleContent
		{ after(grammarAccess.getSlideAccess().getContentsContentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_0_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__NameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTextAccess().getNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__ListItemsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAccess().getListItemsNumberedListItemParserRuleCall_0_0()); }
		ruleNumberedListItem
		{ after(grammarAccess.getListAccess().getListItemsNumberedListItemParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__List__ListItemsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListAccess().getListItemsUnNumberedListParserRuleCall_1_0()); }
		ruleUnNumberedList
		{ after(grammarAccess.getListAccess().getListItemsUnNumberedListParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberedListItem__ItemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberedListItemAccess().getItemSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getNumberedListItemAccess().getItemSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnNumberedList__ItemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnNumberedListAccess().getItemSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getUnNumberedListAccess().getItemSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getImageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__SrcAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getSrcSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getImageAccess().getSrcSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__AlignmentAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getAlignmentAlignmentParserRuleCall_4_0()); }
		ruleAlignment
		{ after(grammarAccess.getImageAccess().getAlignmentAlignmentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Image__SizeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImageAccess().getSizeSizeParserRuleCall_5_0()); }
		ruleSize
		{ after(grammarAccess.getImageAccess().getSizeSizeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__ScaleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizeAccess().getScaleINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getSizeAccess().getScaleINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_3_0()); }
		ruleTableRow
		{ after(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__RowsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_4_1_0()); }
		ruleTableRow
		{ after(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__ValuesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableRowAccess().getValuesSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTableRowAccess().getValuesSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TableRow__ValuesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableRowAccess().getValuesSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTableRowAccess().getValuesSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__TargetAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimationAccess().getTargetFloatCrossReference_1_0()); }
		(
			{ before(grammarAccess.getAnimationAccess().getTargetFloatIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getAnimationAccess().getTargetFloatIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getAnimationAccess().getTargetFloatCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimationAccess().getTypeAnimationTypeParserRuleCall_2_0()); }
		ruleAnimationType
		{ after(grammarAccess.getAnimationAccess().getTypeAnimationTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__LocationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimationAccess().getLocationAlignmentParserRuleCall_4_0()); }
		ruleAlignment
		{ after(grammarAccess.getAnimationAccess().getLocationAlignmentParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Animation__SizeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnimationAccess().getSizeSizeParserRuleCall_5_0()); }
		ruleSize
		{ after(grammarAccess.getAnimationAccess().getSizeSizeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
